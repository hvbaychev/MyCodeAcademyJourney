1. Направете програма за показване на месечен календар по зададена дата.
Входни данни: Дата
Изходни данни: Календар за месеца в табличен вид  където дните от седмицата са представени в колони: П В С Ч П С Н, а дните се показват по подходящ начин като се започне от съответната колона. Внимавайте за дните през месец февруари при високосна година. В началото на календара да се показва месец и година, съответстващи на входната дата. Месецът да се изписва на български език.

Пример:

Март 2023
 П   В   С   Ч   П   С   Н
         1   2   3   4   5
 6   7   8   9  10  11  12
13  14  15  16  17  18  19
20  21  22  23  24  25  26
27  28  29  30  31

2. Разширете календара си по следният начин:
Входни данни: Дата; Флаг, указващ дали първият ден от седмицата е П или Н.
Изходни данни: Променете визуализацията от задача 1 така, че да започва с правилния ден от седмицата. Също оградете текущата дата в скобки.

Пример:

Март 2023
 Н   П   В   С   Ч   П   С
             1   2   3   4
 5   6   7   8   9  10  11
12  13 (14) 15  16  17  18
19  20  21  22  23  24  25
26  27  28  29  30  31

3. Разширете задачата като добавите още един входен параметър - флаг, който включва или изключва добавянето на дните от края на предходния месец и дните от началото на следващия месец.

Пример:

Март 2023
 П   В   С   Ч   П   С   Н
29   30  1   2   3   4   5
 6   7   8   9  10  11  12
13 (14) 15  16  17  18  19
20  21  22  23  24  25  26
27  28  29  30  31   1   2

4. Добавете в края на вашият календар от задача 3 коя е зодията, съответстваща на конкретната дата. Това би било още един параметър във функцията ви за генериране на календара (например $show_zodiac = true)

Пример:

Март 2023
 П   В   С   Ч   П   С   Н
29   30  1   2   3   4   5
 6   7   8   9  10  11  12
13 (14) 15  16  17  18  19
20  21  22  23  24  25  26
27  28  29  30  31   1   2
Зодия: Риби - (19 Февруари - 20 Март)



ВАЖНО ЗА ВСИЧКИ ЗАДАЧИ: 
* Въпреки, че задачите са свързани, използвайте отделни файлове за решенията си. (Например: ex1.php; task 1.php)
* Опитайте се да отделите визуализацията, изчисленията и данните в отделни функции. В главната част на програмата трябва да има нещо като: 

$date = '2023-03-14';
echo build_calendar($date, ...$flags)."\n";

* Ако желаете за улеснение бихте могли да решите задачите в текстов вариант т.е. без HTML.


function generate_month_calendar($date, $firstDayOfMonth = "П", $includePreviousDays = false, $zodiac = []) {
    date_default_timezone_set('Europe/Sofia');

    $first_day_number = date('w', strtotime($date.'-01'));
    $is_monday_first_day = ($first_day_number === '1');
    $is_sunday_first_day = ($first_day_number === '0');
    $last_day = date('t', strtotime($date.'-01'));
    $month_name = ucfirst(strftime('%B %Y', strtotime($date)));
    $currentDay = intval(date("d"));

    $previous_days = $includePreviousDays ? ($is_sunday_first_day ? 6 : $first_day_number - 1) : 0;

    if ($firstDayOfMonth == "Н") {
        $week_days = array('Н', 'П', 'В', 'С', 'Ч', 'П', 'С');
        $first_day_number = ($first_day_number + 6) % 7;
    } else {
        $week_days = array('П', 'В', 'С', 'Ч', 'П', 'С', 'Н');
    }

    echo "<h2>" . $month_name . "</h2>";

    echo "<table>";
    echo "<tr>";
    foreach ($week_days as $day) {
        echo "<th>" . $day . "</th>";
    }
    echo "</tr>";

    echo "<tr>";
    if ($is_monday_first_day) {
        echo "<td></td>";
    }
    for ($i = 0; $i < $previous_days; $i++) {
        $previous_month_last_day = date('t', strtotime('-1 month', strtotime($date)));
        $day_number = $previous_month_last_day - ($previous_days - $i - 1);
        echo "<td>" . $day_number . "</td>";
    }

    for ($day = 1; $day <= $last_day; $day++) {
        if ($day === $currentDay) {
            echo "<td>(" . $day . ")</td>";
        } else {
            echo "<td>" . $day . "</td>";
        }

        if (($day + $previous_days + ($is_monday_first_day ? 1 : 0)) % 7 == 0) {
            echo "</tr><tr>";
